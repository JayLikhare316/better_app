name: Simple CI/CD Pipeline

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Simple build, scan and deploy pipeline
  build-scan-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
      security-events: write
    
    steps:
    # Pull code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Build Docker image
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    # Trivy security scan
    - name: Run Trivy container scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ github.sha }}
        format: 'table'
        severity: 'HIGH,CRITICAL'
        exit-code: '1'
    
    # Deploy to development
    - name: Update Kubernetes manifests
      run: |
        # Update StatefulSet
        sed -i "s|image: ghcr.io/.*/.*:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ github.sha }}|" k8s/statefulset.yaml
        # Update Deployment
        sed -i "s|image: ghcr.io/.*/.*:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ github.sha }}|" k8s/deployment.yaml
        echo "Updated image to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ github.sha }}"
    
    - name: Deploy to development
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add k8s/statefulset.yaml k8s/deployment.yaml
        git commit -m "Deploy: dev-${{ github.sha }}" || exit 0
        git push
        echo "Deployment ready for ArgoCD sync"
